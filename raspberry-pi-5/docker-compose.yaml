services:
  homepage:
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - /home/alexg/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      HOMEPAGE_ALLOWED_HOSTS: hp.${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hp.rule=Host(`hp.${DOMAIN}`)"
      - "traefik.http.routers.hp.entrypoints=websecure"
      - "traefik.http.routers.hp.tls.certresolver=letsencrypt"
      - "traefik.http.services.hp.loadbalancer.server.port=3000"
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
    environment:
      TZ: '${TIMEZONE}'
      FTLCONF_webserver_api_password: '${PIHOLE_PASSWORD}'
      FTLCONF_dns_listeningMode: 'all'
    volumes:
      - pihole:/etc/pihole
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ph.rule=Host(`ph.${DOMAIN}`)"
      - "traefik.http.routers.ph.entrypoints=websecure"
      - "traefik.http.routers.ph.tls.certresolver=letsencrypt"
      - "traefik.http.services.ph.loadbalancer.server.port=80"
  samba:
    container_name: samba
    image: ghcr.io/servercontainers/samba:latest
    restart: unless-stopped
    network_mode: host
    cap_add:
      - CAP_NET_ADMIN
    environment:
      SAMBA_CONF_LOG_LEVEL: 3
      AVAHI_DISABLE: 1
      ACCOUNT_${SAMBA_USERNAME_1}: "${SAMBA_PASSWORD_1}"
      UID_${SAMBA_USERNAME_1}: 1000
      ACCOUNT_${SAMBA_USERNAME_2}: "${SAMBA_PASSWORD_2}"
      UID_family: 1001
      SAMBA_VOLUME_CONFIG_share: "[${SAMBA_USERNAME_1}]; path=/shares/${SAMBA_USERNAME_1}; valid users = ${SAMBA_USERNAME_1}; writeable = yes; write list = ${SAMBA_USERNAME_1}; create mask = 0775; directory mask = 0775"
      SAMBA_VOLUME_CONFIG_family: "[${SAMBA_USERNAME_2}]; path=/shares/${SAMBA_USERNAME_2}; valid users = ${SAMBA_USERNAME_1}, ${SAMBA_USERNAME_2}; force user = ${SAMBA_USERNAME_2}; writeable = yes; write list = ${SAMBA_USERNAME_2}; create mask = 0774; directory mask = 0774"
      SAMBA_VOLUME_CONFIG_${SAMBA_USERNAME_2}r: "[${SAMBA_USERNAME_2} - Read Only]; path=/shares/${SAMBA_USERNAME_2}; guest ok = yes"
    volumes:
      - /shares:/shares
      - /shares/${SAMBA_USERNAME_1}:/shares/${SAMBA_USERNAME_1}
      - /shares/${SAMBA_USERNAME_2}:/shares/${SAMBA_USERNAME_2}
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    environment:
      - TS_HOSTNAME=rpi5
      - TS_AUTHKEY=${TAILSCALE_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false # Optional: force kernel-based networking; userspace fallback if not supported
      - TS_ROUTES=${SUBNET}
      - TS_EXTRA_ARGS=--advertise-exit-node
    volumes:
      - tailscale:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
    network_mode: host
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/letsencrypt
    command:
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=${CLOUDFLARE_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tf.rule=Host(`tf.${DOMAIN}`)"
      - "traefik.http.routers.tf.service=api@internal"
      - "traefik.http.routers.tf.entrypoints=websecure"
      - "traefik.http.routers.tf.tls.certresolver=letsencrypt"
      - "traefik.http.services.tf.loadbalancer.server.port=8080"
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
#      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN}
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=false
    volumes:
      - vaultwarden:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vw.rule=Host(`vw.${DOMAIN}`)"
      - "traefik.http.routers.vw.entrypoints=websecure"
      - "traefik.http.routers.vw.tls.certresolver=letsencrypt"
      - "traefik.http.services.vw.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.monitor-only=true"
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${NOTIFICATION_EMAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${NOTIFICATION_EMAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${NOTIFICATION_EMAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${GMAIL_APP_PASSWORD}
      - WATCHTOWER_CLEANUP=true
volumes:
  pihole:
  tailscale:
  traefik:
  vaultwarden: